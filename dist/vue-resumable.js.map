{"version":3,"sources":["webpack://VueResumable/webpack/universalModuleDefinition","webpack://VueResumable/webpack/bootstrap","webpack://VueResumable/./node_modules/vue-loader/lib/runtime/component-normalizer.js","webpack://VueResumable/./src/lib/InputFile.vue","webpack://VueResumable/src/lib/InputFile.vue","webpack://VueResumable/./src/lib/InputFile.vue?b307","webpack://VueResumable/./src/utils/features.js","webpack://VueResumable/./src/entity/file.js","webpack://VueResumable/./src/utils/queue.js","webpack://VueResumable/./src/utils/request.js","webpack://VueResumable/./src/utils/upload.js","webpack://VueResumable/./src/lib/FileUpload.vue","webpack://VueResumable/src/lib/FileUpload.vue","webpack://VueResumable/./src/lib/FileUpload.vue?a40b","webpack://VueResumable/./src/lib/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","type","default","hook","options","_compiled","functional","_scopeId","context","this","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","concat","lib_InputFile","$destroy","target","$parent","$el","_vm","_h","$createElement","_self","_c","attrs","id","inputId","accept","capture","webkitdirectory","directory","features","multiple","html5","on","change","input","document","createElement","FormData","files","drop","ondrop","File","file","maxRetries","_classCallCheck","size","relativePath","webkitRelativePath","lastModified","identifier","guid","uploadPercent","uploading","retries","test","url","getObjectURL","undefined","createObjectURL","URL","webkitURL","replace","Math","random","toString","Queue","_this","queue_classCallCheck","thread","uploaderList","enableChunk","recursive","list","Promise","resolve","_getNotStartUploader","length","send","then","catch","count","_getUploadingList","forEach","uploader","push","request","reject","xhr","XMLHttpRequest","action","query","queryArray","keys","key","encodeURIComponent","join","match","_generateAction","progress","upload","addEventListener","doneHandler","event","status","open","method","headers","setRequestHeader","data","Uploader","upload_classCallCheck","requestType","chunk","chunkSize","carryParamName","typeName","carryTypeName","fileNameName","carryFileNameName","relativePathName","carryRelativePathName","chunkSizeName","carryChunkSizeName","currentChunkSizeName","carryCurrentChunkSizeName","totalSizeName","carryTotalSizeName","chunkIndexName","carryChunkIndexName","totalChunksName","carryTotalChunksName","identifierName","carryIdentifierName","currentChunkSize","chunkIndex","totalChunks","_chunkUploadSend","_entiretyUpload","formData","append","requestOptions","lengthComputable","round","loaded","total","sendUpload","params","assign","_getCommonArguments","fr","FileReader","onload","result","readAsDataURL","_setBodyFields","blob","index","start","end","_this2","num","_filterChunkList","floor","chunks","_blob","slice","startOffset","_createChunkOptions","_this3","_setFileUploadResult","_sendChunk","state","_this4","newChunkList","threadCount","_createChunks","_sendChunkQueue","lib_FileUpload","InputFile","String","Boolean","Number","postAction","_getUploaderList","__uploadingTime__","staticClass","_t","_v","VueResumable","install","Vue","component","use","__webpack_exports__"],"mappings":"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","file":"vue-resumable.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"VueResumable\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VueResumable\"] = factory();\n\telse\n\t\troot[\"VueResumable\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  scriptExports = scriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof scriptExports.default\n  if (type === 'object' || type === 'function') {\n    scriptExports = scriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./InputFile.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./InputFile.vue\"\n/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-648e085f\\\",\\\"hasScoped\\\":false,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./InputFile.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n","<template>\n  <input\n    type=\"file\"\n    :name=\"$parent.name\"\n    :id=\"$parent.inputId || $parent.name\"\n    :accept=\"$parent.accept\"\n    :capture=\"$parent.capture\"\n    @change=\"change\"\n    :webkitdirectory=\"$parent.directory && $parent.features.directory\"\n    :directory=\"$parent.directory && $parent.features.directory\"\n    :multiple=\"$parent.multiple && $parent.features.html5\"\n  />\n</template>\n<script>\n  export default {\n    methods: {\n      change(e) {\n        this.$destroy()\n        this.$parent.addInputFile(e.target)\n        // eslint-disable-next-line\n        new this.constructor({\n          parent: this.$parent,\n          el: this.$el,\n        })\n      }\n    }\n  }\n</script>\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('input',{attrs:{\"type\":\"file\",\"name\":_vm.$parent.name,\"id\":_vm.$parent.inputId || _vm.$parent.name,\"accept\":_vm.$parent.accept,\"capture\":_vm.$parent.capture,\"webkitdirectory\":_vm.$parent.directory && _vm.$parent.features.directory,\"directory\":_vm.$parent.directory && _vm.$parent.features.directory,\"multiple\":_vm.$parent.multiple && _vm.$parent.features.html5},on:{\"change\":_vm.change}})}\nvar staticRenderFns = []\nexport { render, staticRenderFns }","export default new function () {\n  let input = document.createElement('input')\n  input.type = 'file'\n  input.multiple = true\n\n  let features = {}\n  features.html5 = window.FormData && input.files && true\n\n  if (features.html5) {\n    features.directory = typeof input.webkitdirectory === 'boolean' || typeof input.directory === 'boolean'\n    features.drop = typeof input.ondrop !== 'undefined'\n  }\n\n  return features\n\n}\n","export default class File {\n  constructor(file, maxRetries) {\n    this.file = file\n    this.name = file.name\n    this.size = file.size\n    this.type = file.type\n    this.relativePath = file.webkitRelativePath || file.relativePath || ''\n    this.lastModified = file.lastModified\n    this.identifier = this.guid()\n    this.uploadPercent = 0\n    this.uploading = 0 // -1:上传失败 0:未上传 1:上传中 2:上传成功\n    this.retries = maxRetries || 1\n    this.maxRetries = maxRetries || 1\n\n    if (/^image\\/*/.test(file.type)) {\n      this.url = this.getObjectURL(file)\n    }\n  }\n\n  getObjectURL(file) {\n    let url = null\n    if (window.createObjectURL !== undefined) {\n      url = window.createObjectURL(file)\n    } else if (window.URL !== undefined) {\n      url = window.URL.createObjectURL(file)\n    } else if (window.webkitURL !== undefined) {\n      url = window.webkitURL.createObjectURL(file)\n    }\n    return url\n  }\n\n  guid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      let r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16)\n    })\n  }\n\n}\n","export default class Queue {\n  constructor(options) {\n    this.thread = options.thread\n    this.uploaderList = options.uploaderList\n    this.enableChunk = options.enableChunk\n\n    let recursive = null\n    let list = null\n    return new Promise(resolve => {\n      if (this.enableChunk) {\n        recursive = () => {\n          list = this._getNotStartUploader()\n          if (list.length) {\n            list[0].send().then(() => recursive()).catch(() => recursive())\n          } else {\n            resolve(this.uploaderList)\n          }\n        }\n      } else {\n        recursive = () => {\n          list = this._getNotStartUploader()\n          if (list.length) {\n            let count = this.thread > list.length ? list.length : this.thread\n            for (let i = 0; i < count - this._getUploadingList(); i++) {\n              list[i].send().then(() => recursive()).catch(() => recursive())\n            }\n          } else {\n            resolve(this.uploaderList)\n          }\n        }\n      }\n      recursive()\n    })\n  }\n\n  /**\n   * 未启动的上传\n   * @returns {Array}\n   * @private\n   */\n  _getNotStartUploader() {\n    let uploaderList = []\n    this.uploaderList.forEach(uploader => {\n      if (!uploader.file.uploading) {\n        uploaderList.push(uploader)\n      }\n    })\n    return uploaderList\n  }\n\n  /**\n   * 上传中的列表\n   * @returns {Array}\n   * @private\n   */\n  _getUploadingList() {\n    let uploaderList = []\n    this.uploaderList.forEach(uploader => {\n      if (uploader.file.uploading === 1) {\n        uploaderList.push(uploader)\n      }\n    })\n    return uploaderList\n  }\n}\n","const _generateAction = (action, query) => {\n  if (query) {\n    let queryArray = []\n    Object.keys(query).forEach(key => {\n      queryArray.push([encodeURIComponent(key), encodeURIComponent(query[key])].join('='))\n    })\n    if (queryArray.length) {\n      action += action.match('\\\\?') ? '&' : '?' + queryArray.join('&')\n    }\n  }\n  return action\n}\n\nexport default function (options) {\n  return new Promise((resolve, reject) => {\n    let xhr = new XMLHttpRequest()\n    let action = options.query ? _generateAction(options.action, options.query) : options.action\n\n    if (options.progress) {\n      xhr.upload.addEventListener('progress', options.progress, false)\n    }\n\n    let doneHandler = (event) => {\n      xhr.status >= 200 && xhr.status < 300 ? resolve(xhr, event) : reject(event)\n    }\n\n    xhr.addEventListener('load', doneHandler, false)\n    xhr.addEventListener('error', doneHandler, false)\n    xhr.addEventListener('abort', doneHandler, false)\n    xhr.addEventListener('timeout', doneHandler, false)\n\n    xhr.open(options.method, action)\n\n    Object.keys(options.headers).forEach(key => xhr.setRequestHeader(key, options.headers[key]))\n    xhr.send(options.data)\n  })\n}\n","import request from './request'\n\n/**\n * 上传出错\n * @type {number}\n */\nconst ERROR = -1\n/**\n * 未开始上传\n * @type {number}\n */\nconst NOT_START = 0\n/**\n * 上传中\n * @type {number}\n */\nconst UPLOADING = 1\n/**\n * 上传成功\n * @type {number}\n */\nconst SUCCESS = 2\n\nexport default class Uploader {\n  constructor(options) {\n    this.action = options.action\n    this.method = options.method\n    this.headers = options.headers\n    this.data = options.data\n    this.file = options.file\n    this.progress = options.progress\n    this.requestType = options.requestType\n\n    this.thread = options.chunk.thread\n    this.chunkSize = options.chunk.chunkSize * 1024\n\n    // 携带参数KEY\n    this.carryParamName = {\n      typeName: options.carryTypeName,\n      fileNameName: options.carryFileNameName,\n      relativePathName: options.carryRelativePathName,\n      chunkSizeName: options.chunk.carryChunkSizeName,\n      currentChunkSizeName: options.chunk.carryCurrentChunkSizeName,\n      totalSizeName: options.chunk.carryTotalSizeName,\n      chunkIndexName: options.chunk.carryChunkIndexName,\n      totalChunksName: options.chunk.carryTotalChunksName,\n      identifierName: options.chunk.carryIdentifierName\n    }\n\n  }\n\n  /**\n   * 返回公共参数\n   * @param totalSize 文件总大小\n   * @param chunkSize 分块大小\n   * @param currentChunkSize  当前分块大小\n   * @param chunkIndex  当前分块index\n   * @param totalChunks 分块总量\n   * @param identifier  文件唯一标识\n   * @private\n   */\n  _getCommonArguments(options) {\n    let data = {}\n    data[this.carryParamName.typeName] = this.file.type\n    data[this.carryParamName.fileNameName] = this.file.name\n    data[this.carryParamName.relativePathName] = this.file.relativePath\n    data[this.carryParamName.totalSizeName] = this.file.size\n    data[this.carryParamName.chunkSizeName] = options.chunkSize\n    data[this.carryParamName.currentChunkSizeName] = options.currentChunkSize\n    data[this.carryParamName.chunkIndexName] = options.chunkIndex\n    data[this.carryParamName.totalChunksName] = options.totalChunks\n    data[this.carryParamName.identifierName] = this.file.identifier\n    return data\n  }\n\n\n  send() {\n    if (this.file.uploading) {\n      return\n    }\n    // 分块上传\n    if (this.chunkSize && this.file.size > this.chunkSize) {\n      return this._chunkUploadSend()\n    }\n    return this._entiretyUpload()\n  }\n\n  get requestOptions() {\n    return {\n      action: this.action,\n      method: this.method,\n      headers: this.headers\n    }\n  }\n\n  _setBodyFields(formData, data) {\n    Object.keys(data).forEach(key => formData.append(key, data[key]))\n    return formData\n  }\n\n  /**\n   * 整体上传\n   * @returns {Promise<T>}\n   * @private\n   */\n  _entiretyUpload() {\n    let options = this.requestOptions\n    if (this.progress) {\n      options.progress = (event) => {\n        if (event.lengthComputable) {\n          this.file.uploadPercent = Math.round(event.loaded * 100 / event.total)\n        } else {\n          this.file.uploadPercent = 0\n        }\n      }\n    }\n\n    let sendUpload = () => {\n      this.file.uploading = 1\n      return request(options).then((xhr, event) => {\n        this.file.uploading = 2\n        this.file.xhr = xhr\n        this.file.event = event\n        return this.file\n      }).catch(event => {\n        if (this.file.retries) {\n          --this.file.retries\n          this.file.uploading = 0\n          this.send()\n        } else {\n          this.file.event = event\n          this.file.uploading = -1\n          return this.file\n        }\n      })\n    }\n\n    let params = Object.assign({},\n      // 非分块上传时,公共参数 块大小,当前块大小都是文件大小,config:1,总块数:1\n      this._getCommonArguments({\n        chunkSize: this.file.size,\n        currentChunkSize: this.file.size,\n        chunkIndex: 1,\n        totalChunks: 1\n      }),\n      this.data)\n\n    if (this.requestType === 'octet') {\n      options.query = params\n      return new Promise(resolve => {\n        let fr = new FileReader()\n        fr.onload = () => {\n          options.data = fr.result\n          resolve(sendUpload())\n        }\n        fr.readAsDataURL(this.file.file)\n      })\n    } else {\n      params[this.file.name] = this.file.file\n      options.data = this._setBodyFields(new FormData(), params)\n      return sendUpload()\n    }\n  }\n\n  _createChunkOptions(blob, index, start, end) {\n    let options = Object.assign({}, this.requestOptions)\n    if (this.progress) {\n      options.progress = (event) => {\n        if (event.lengthComputable) {\n          let num = this._filterChunkList(SUCCESS).length\n          this.file.uploadPercent = Math.floor(100 / this.chunks.length * num) + Math.floor(event.loaded * 100 / this.file.size)\n        }\n      }\n    }\n\n    let params = Object.assign(\n      this._getCommonArguments({\n        chunkSize: this.chunkSize,\n        currentChunkSize: blob.size,\n        chunkIndex: index + 1,\n        totalChunks: 1\n      }),\n      this.data, {\n        start: start,\n        end: end\n      })\n\n    if (this.requestType === 'octet') {\n      options.query = params\n      options.data = blob\n    } else {\n      params[this.file.name] = blob\n      options.data = this._setBodyFields(new FormData(), params)\n    }\n\n    return options\n  }\n\n  _createChunks() {\n    this.chunks = []\n\n    let index = 0\n    let start = 0\n    let end = this.chunkSize\n\n    while (start < this.file.size) {\n      let _blob = this.file.file.slice(start, end)\n      let chunk = {\n        index: index,\n        blob: _blob,\n        startOffset: start,\n        uploading: NOT_START,\n        retries: this.file.maxRetries\n      }\n\n      chunk.options = this._createChunkOptions(chunk.blob, index, start, end)\n      this.chunks.push(chunk)\n      index++\n      start = end\n      end = start + this.chunkSize\n    }\n    let _self = this\n    this.chunks.forEach(chunk => {\n      chunk.total = index\n      if (_self.requestType === 'octet') {\n        chunk.options.query[_self.carryParamName.totalChunksName] = index\n      } else {\n        chunk.options.data.append(_self.carryParamName.totalChunksName, index)\n      }\n    })\n  }\n\n  _setFileUploadResult(chunk, event, xhr) {\n    if (!this.file.chunk) {\n      this.file.chunk = {xhr: {}, event: {}}\n    }\n    if (xhr) {\n      this.file.chunk.xhr[chunk.index] = xhr\n    }\n    if (event) {\n      this.file.chunk.event[chunk.index] = event\n    }\n    if (Object.keys(this.file.chunk.xhr).length === chunk.total) {\n      this.file.uploading = SUCCESS\n    }\n  }\n\n  _sendChunk(chunk) {\n    if (chunk.uploading) {\n      return\n    }\n    chunk.uploading = UPLOADING\n    return request(chunk.options).then((xhr, event) => {\n      chunk.uploading = SUCCESS\n\n      this._setFileUploadResult(chunk, event, xhr)\n    }).catch(event => {\n      if (chunk.retries) {\n        --chunk.retries\n        chunk.uploading = NOT_START\n        this._sendChunk(chunk)\n      } else {\n        chunk.uploading = ERROR\n        this.file.uploading = ERROR\n        this.file.uploadPercent = 0\n        this._setFileUploadResult(chunk, event)\n      }\n    })\n  }\n\n  /**\n   * 过滤chunk返回对应列表\n   * @param state 对应chunk对象的uploading字段\n   * @returns {Array}\n   * @private\n   */\n  _filterChunkList(state) {\n    let list = []\n    // 查询未上传的chunk时检查文件有没有被标记为失败\n    if (state === 0 && this.file.uploading < 0) {\n      return list\n    }\n    this.chunks.forEach(chunk => {\n      if (chunk.uploading === state) {\n        list.push(chunk)\n      }\n    })\n    return list\n  }\n\n  _sendChunkQueue() {\n    return new Promise(resolve => {\n      let recursive = () => {\n        let newChunkList = this._filterChunkList(NOT_START)\n        if (!newChunkList.length) {\n          resolve(this.file)\n          return\n        }\n        let threadCount = newChunkList.length > this.thread ? this.thread : newChunkList.length\n        threadCount -= this._filterChunkList(UPLOADING)\n        if (threadCount <= 0) {\n          return\n        }\n        for (let i = 0; i < threadCount; i++) {\n          this._sendChunk(newChunkList[i]).then(() => {\n            let num = this._filterChunkList(SUCCESS).length\n            if (num === this.chunks.length) {\n              this.file.uploadPercent = 100\n              return\n            }\n            this.file.uploadPercent = Math.floor(100 / this.chunks.length * num)\n            recursive()\n          }).catch(() => recursive())\n        }\n      }\n      recursive()\n    })\n  }\n\n  _chunkUploadSend() {\n    this._createChunks()\n    this.file.uploading = UPLOADING\n    return this._sendChunkQueue()\n  }\n}\n","/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./FileUpload.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./FileUpload.vue\"\n/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-d8e1d7ea\\\",\\\"hasScoped\\\":false,\\\"optionsId\\\":\\\"0\\\",\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./FileUpload.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n","<template>\n  <label class=\"className\">\n    <slot></slot>\n    <input-file></input-file>\n  </label>\n</template>\n<script>\n  import InputFile from './InputFile.vue'\n  import features from '../utils/features'\n  import File from '../entity/file'\n  import Queue from '../utils/queue'\n  import Upload from '../utils/upload'\n\n  export default {\n    name: 'vue-resumable',\n\n    components: {InputFile},\n    props: {\n      inputId: {\n        type: String\n      },\n      name: {\n        type: String,\n        default: 'file',\n      },\n      requestType: {\n        type: String,\n        default: 'octet',\n      },\n      capture: {},\n      multiple: {\n        type: Boolean,\n      },\n      accept: {\n        type: String,\n      },\n      directory: {\n        type: Boolean,\n      },\n      postAction: {\n        type: String,\n      },\n      headers: {\n        type: Object,\n        default: Object,\n      },\n      data: {\n        type: Object,\n        default: Object,\n      },\n      timeout: {\n        type: Number,\n        default: 0,\n      },\n      progress: {\n        type: Boolean,\n        default: true,\n      },\n      // 是否对新增队列的文件 立即上传\n      promptly: {\n        type: Boolean,\n        default: false,\n      },\n      // 上传进程数\n      thread: {\n        type: Number,\n        default: 1,\n      },\n      // 分块大小 单位 0为不开启\n      chunkSize: {\n        type: Number,\n        default: 0\n      },\n      // 上传失败或遇到异常 重试次数\n      maxRetries: {\n        type: Number,\n        default: 3\n      },\n      // 同步发送给服务端的参数\n      carryTypeName: {type: String, default: 'resumableType'},\n      carryFileNameName: {type: String, default: 'resumableFilename'},\n      carryRelativePathName: {type: String, default: 'resumableRelativePath'},\n      carryChunkSizeName: {type: String, default: 'resumableChunkSize'},\n      carryCurrentChunkSizeName: {type: String, default: 'resumableCurrentChunkSize'},\n      carryTotalSizeName: {type: String, default: 'resumableTotalSize'},\n      carryChunkIndexName: {type: String, default: 'resumableChunkNumber'},\n      carryTotalChunksName: {type: String, default: 'resumableTotalChunks'},\n      carryIdentifierName: {type: String, default: 'resumableIdentifier'},\n    },\n    data() {\n      return {\n        files: [],\n        features: features,\n        uploading: 0\n      }\n    },\n    watch: {\n      files: function () {\n        if (!this.promptly) {\n          return\n        }\n        this.upload()\n      }\n    },\n    methods: {\n      /**\n       * file input change event\n       * @param file\n       */\n      addInputFile: function (el) {\n        if (el.files && el.files.length) {\n          for (let i = 0; i < el.files.length; i++) {\n            let file = el.files[i]\n            this.files.push(new File(file, this.maxRetries))\n          }\n        }\n        this.$emit('change', this.files)\n      },\n      clear: function () {\n        this.files = []\n      },\n      _generateUploader: function (file) {\n        return new Upload({\n          action: this.postAction,\n          method: 'POST',\n          headers: this.headers,\n          data: this.data,\n          file: file,\n          progress: this.progress,\n          requestType: this.requestType,\n          chunk: {\n            thread: this.thread,\n            chunkSize: this.chunkSize,\n            carryChunkSizeName: this.carryChunkSizeName,\n            carryCurrentChunkSizeName: this.carryCurrentChunkSizeName,\n            carryTotalSizeName: this.carryTotalSizeName,\n            carryChunkIndexName: this.carryChunkIndexName,\n            carryTotalChunksName: this.carryTotalChunksName,\n            carryIdentifierName: this.carryIdentifierName\n          },\n          carryTypeName: this.carryTypeName,\n          carryFileNameName: this.carryFileNameName,\n          carryRelativePathName: this.carryRelativePathName\n        })\n      },\n      _getUploaderList: function () {\n        let _self = this\n        let uploaderList = []\n        this.files.forEach(file => {\n          if (!file.uploading) {\n            uploaderList.push(_self._generateUploader(file))\n          }\n        })\n        return uploaderList\n      },\n      upload: function () {\n        let _self = this\n        let queue = {\n          thread: this.thread,\n          uploaderList: this._getUploaderList(),\n          enableChunk: this.chunkSize\n        }\n        if (this.uploading) {\n          return new Promise(resolve => {\n            _self.__uploadingTime__ = setInterval(() => {\n              if (!_self.uploading) {\n                window.clearInterval(_self.__uploadingTime__)\n                resolve()\n              }\n            }, 333)\n          }).then(() => {\n            return new Queue(queue).then(() => {\n              _self.uploading = 0\n            })\n          })\n        }\n        return new Queue(queue).then(() => {\n          _self.uploading = 0\n        })\n      }\n    }\n  }\n</script>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',{staticClass:\"className\"},[_vm._t(\"default\"),_vm._v(\" \"),_c('input-file')],2)}\nvar staticRenderFns = []\nexport { render, staticRenderFns }","import FileUpload from './FileUpload'\n\nconst VueResumable = {\n  install(Vue, options) {\n    Vue.component(FileUpload.name, FileUpload)\n  }\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(VueResumable)\n}\n\nexport default VueResumable\n"],"sourceRoot":""}